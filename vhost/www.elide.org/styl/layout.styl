/* $Id$ */

$grid-basefont = 18px; // TODO

body {
	margin:  0;
	padding: 0;
	padding-bottom: ($grid-baseline * 3);

	clearfix();
}

section.page {
	grid-container();

	// TODO: max-width: $grid-baseline * 100;

	& > p,
	& > h2,
	& > ul,
	& > dl {
		grid-column($grid-ncols - 1);
		grid-indent(1);
	}

	h2 {
		padding-top: ceil($grid-baseline * 0.0);
		font-size:       ($grid-basefont * 2.0);
		line-height:     ($grid-baseline * 1.0);
	}

	& > dl.index {
		dt a {
			display: block;

			width: 25%;
			float: left;
			clear: left;

			padding: 0.5ex  2ex;
			margin: -0.5ex -2ex;
		}

		dd {
			margin-left:  25%;
			padding-left: $grid-gutter;
		}
	}
}

header, footer {
	/* XXX: better to use grid-container() if possible. or both -container and -column,
	in which case -column ought to look for existing @padding and just add to it */
	padding: $grid-padding[0] ($grid-margin + $grid-padding[1] + $grid-gutter / 2);
}

header {
	margin-top:    ($grid-baseline * 6.0);
	margin-bottom: ($grid-baseline * 2.5);

	/* respond when the page height is below 30 lines */
	$q = "all and (max-height: " + ($grid-baseline * 30) + ")";
	@media $q {
		margin-top: ($grid-baseline * 2.0);
	}

	h1, ul#contents {
		grid-indent(1);
	}

	h1 {
		padding-top: ceil($grid-baseline * 0.0);
		font-size:       ($grid-basefont * 3.0);
		line-height:     ($grid-baseline * 2.0);

		/* respond when the page height is below 30 lines */
		$q = "all and (max-height: " + ($grid-baseline * 30) + ")";
		@media $q {
			line-height:     ($grid-baseline * 1.5);
			font-size:       ($grid-baseline * 2.0);
		}
	}
}

footer {
	margin-top:    ($grid-baseline * 2);
	margin-bottom: ($grid-baseline * 2);
	display: none; /* XXX */
}

nav#monthindex,
section.page nav.pages {
	grid-column($grid-ncols);
}

section.page article.entry {
	grid-column($grid-ncols);

	a[name],
	ul.tags {
		margin-left: ($grid-margin + $grid-gutter / 2);
		display: block;
		position: relative;
		text-align: left;
	}

	/* respond when 1 colspan has a min-width wide enough for "YYYY-MM-DD" */
	$q = "all and " + grid-respond("min", 100px, 1);
	@media $q {
		grid-column($grid-ncols - 1);
		grid-indent(1);

		a[name],
		ul.tags {
			grid-column(1);
			grid-ident(-1);

			position: absolute;
			left: 0;
		}
	}
}

nav#monthindex {
	grid-column($grid-ncols);
	grid-indent(0);

	display: block;
	margin-top:    ($grid-baseline * 1);
	margin-bottom: ($grid-baseline * 1);

	font-size: .9em;

	ol.pages {
		float: left;
	}

	& > a {
		float: right;
	}

	/* respond when 1 colspan has a min-width wide enough for "YYYY-MM-DD" */
	$q = "all and " + grid-respond("min", 100px, 1);
	@media $q {
		grid-column($grid-ncols - 1);
		grid-indent(1);
	}

	/* TODO: could animate collapsing by transitioning on width to 0 */

	/* respond when the #monthindex is too narrow to fit all 12 months explicitly */
	$q = "all and " + grid-respond("max", $grid-basefont * 30, 4);
	@media $q {
		pages-collapse(data-fmt);
	}

	/* respond when the #monthindex is too narrow to fit the attr() months */
	$q = "all and " + grid-respond("max", $grid-basefont * 12, 3);
	@media $q {
		pages-collapse(false);

		/* TODO: fold all li's into one lozenge */
	}
}

article.entry {
	ul.tags {
		margin-top: ($grid-baseline * 1);

		li {
			font-size: ($grid-basefont - 1px);
		}
	}
}

nav#sidebar {
	display: none;

	table.calendar {
		table-layout: fixed;

		max-width: (12 * $grid-baseline);
		margin-left: (6 * $grid-baseline);
		width: 100%;

		/* TODO: mixin? */
		border-spacing: 0 ! important;
		border-collapse: collapse ! important;
	}

	ol.years {
		display: none;
		float: left;
		margin-left:   $grid-gutter;
		margin-bottom: $grid-gutter;
	}
}

nav.pages {
	padding-top:    ($grid-baseline * 1);
	padding-bottom: ($grid-baseline * 4);
}

pre {
	overflow-y: auto;
	margin-left: 0;
}

