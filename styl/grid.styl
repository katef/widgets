/* $Id$ */

/*
 * Layout looks like so:
 *
 *   ├─────────────────────────── parent ────────────────────────┤
 *   ╎    ├───────────────── .grid-container ────────────────┤   ╎
 *   │    ╎          ├──┤ $grid-gutter                       ╎   │
 *   │    ░░▒▒▒▒▒▒▒▒▒░░░░▒▒▒▒▒▒▒▒▒░░░░▒▒▒▒▒▒▒▒▒░░░░▒▒▒▒▒▒▒▒▒░░   │
 *   │    ░░▒▒▒▒▒▒▒▒▒░░░░▒▒▒▒▒▒▒▒▒░░░░▒▒▒▒▒▒▒▒▒░░░░▒▒▒▒▒▒▒▒▒░░   │
 *   │    ░░▒▒▒▒▒▒▒▒▒░░░░▒▒▒▒▒▒▒▒▒░░░░▒▒▒▒▒▒▒▒▒░░░░▒▒▒▒▒▒▒▒▒░░   │
 *   │    ░░▒▒▒▒▒▒▒▒▒░░░░▒▒▒▒▒▒▒▒▒░░░░▒▒▒▒▒▒▒▒▒░░░░▒▒▒▒▒▒▒▒▒░░   │
 *   ╎   ╎               ├───────┤ automatic column width        │
 *   ├───┤ $grid-margin                                          │
 *
 * All variables may be either percentage or fixed widths.
 *
 *   $grid-width     Width of the container, relative to its parent. E.g. 100%
 *   $grid-ncols     Number of columns
 *   $grid-margin    Margin outside .grid-container
 *   $grid-padding   Padding inside .grid-container (not illustrated)
 *   $grid-gutter    Space between one column and the next
 */

$grid-width   ?= 100%;    // e.g. 100%, or e.g. 800px (and set $grid-margin to auto)
$grid-ncols   ?= 12;      // e.g. 12
$grid-margin  ?= 0   10%; // e.g. 2em, or e.g. 15%
$grid-padding ?= 1em 1em; // e.g. 10px 5%
$grid-gutter  ?= 2em;     // e.g. 2em, or e.g. 6%. Ought to be an even number

@import "misc.styl";

/*
 * This gives the screen width (in pixels) if we imagine a column is $width
 * pixels wide. This is intended to be useful for for responsive layouts.
 */
grid-imagine($width, $colspan = 1) {
	/* TODO: assert $width is in px */
	$grid-ncols * ($width / $colspan);
}

/*
 * Produce a media query expression which is true where the given colspan is larger
 * (or smaller) than the given pixel width. For example:
 * 
 *    $q = "all and " + grid-respond("min", 100px, 1);
 *    @media $q {
 *         color: red;
 *    }
 *
 * The above will apply on media where the minimum width for one column is 100px.
 */
grid-respond($m, $width, $colspan = 1) {
	"(" + $m + "-width: " + grid-imagine($width, $colspan) + ")";
}

grid-colwidth($colspan = 1, $width = $grid-width) {
	$width * ($colspan / $grid-ncols);
}

grid-container($padding = $grid-padding, $margin = $grid-margin) {
	padding: $padding;
	margin:  $margin;

	clearfix();
}

grid-column($colspan = $grid-ncols) {
	float: left;
	width: grid-colwidth($colspan);

	padding: 0 ($grid-gutter / 2);

	box-sizing(border-box);
}

grid-indent($colspan = 1) {
	margin-left: grid-colwidth($colspan);
}

