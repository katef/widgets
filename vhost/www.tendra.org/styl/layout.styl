/* $Id$ */

body {
	margin-top:    0;
	margin-bottom: 0;
}

blockquote {
	margin: 0 $grid-indent $baseline $grid-indent;
	color: #999;
}

pre {
	margin: 0;
}

for $l in 0 .. length($grid.ncols) - 1 {
	$q = grid-breakpoint($grid, $l);
	@media $q {

		if ($grid.ncols[$l] <= 3) {
			ol.overlay,
			body {
				// override fluid-margin for tight widths
				margin-left:  0 !important;
				margin-right: 0 !important;
			}
		}

		body {
			if ($grid.layouts[$l] == fixed) {
				// XXX: causes overlap for media width near the break
				padding-left:  ($grid.gutter * 4);
				padding-right: ($grid.gutter * 4);
			}
		}

		body > header nav {
			clear: both; // XXX: why?

			concertina-layout(menustyle($l));

			if (menustyle($l) == vertical) {
				li > ul { display: none; } // XXX: need to have this expand out, too

				margin-bottom: $baseline;
			}

			// XXX: hacky
			if (menustyle($l) == vertical) {
				margin-left:  -($grid.gutter * 1);
				margin-right: -($grid.gutter * 1);
				margin-bottom: 0;
/* XXX: I don't like taking this all the way to the edge
			} else if ($grid.layouts[$l] == 'fluid') {
				margin-left:  -($grid.gutter * 2);
				margin-right: -($grid.gutter * 2);
				& > ul { padding-left: $grid.gutter; }
*/
			}
		}

	}

	$q = grid-breakpoint($grid, $l, min);
	@media $q {
		body {
			grid-container($grid, $l);
		}

		header, footer {
			grid-column($grid, $l, $grid.ncols[$l]);
		}

/*
		main {
			if (sidebar($l)) {
				grid-column($grid, $l, $grid.ncols[$l] - sidebar($l));
			} else {
				grid-column($grid, $l, $grid.ncols[$l]);
			}
		}
*/
html.refentry main {
	if ($grid.ncols[$l] == 12) {
		grid-column($grid, $l, 7, 2);
	} else if ($grid.ncols[$l] == 9) {
		grid-column($grid, $l, 6, 0);
	} else {
		grid-column($grid, $l, $grid.ncols[$l]);
	}
}
html.refentry nav#sidebar {
	margin-top: 2em;

	ul {
		list-style-type: none;
clearfix();
	}

	li {
		float: left;
		margin: 0;
		margin-right: 1em;
	}

	h2 {
		clear: left;
		margin-top: 1em;
	}

	h1 {
		display: none;
	}
}

		nav#sidebar {
			if (sidebar($l)) {
				grid-column($grid, $l, sidebar($l));
			} else {
				grid-column($grid, $l, $grid.ncols[$l]);
			}
		}

		header > form.search {
			// TODO: define subgrid for 66/33%
			input[type=text] {
				grid-column($grid, $l, 2);
			}

			input[type=submit] {
				grid-column($grid, $l, 1);
			}
		}

		/* fallbacks for when fittext.js isn't available */
		header > h1#banner {
// TODO: update for all new sizes
			if ($grid.ncols[$l] == 1) {
				font-size: 1.3em;
			}

			if ($grid.ncols[$l] == 3) {
				font-size: 1.5em;
			}

			if ($grid.ncols[$l] == 6) {
				font-size: 2.2em;
			}

			if ($grid.ncols[$l] == 8) {
				font-size: 2.0em;
			}

			if ($grid.ncols[$l] == 12) {
				font-size: 2.2em;
			}

			@media print {
				text-align: right;
			}
		}

		header > h1#banner {
			grid-column($grid, $l, banner($l), $grid.ncols[$l] - banner($l));
			if ($grid.ncols[$l] <= 3) {
				margin-top:    0.5em;
				margin-bottom: 0.5em;
			} else if ($grid.layouts[$l] == fixed) {
				margin-top:    2em;
				margin-bottom: 1em;
			} else {
				margin-top:    1em;
				margin-bottom: 1em;
			}
		}

		header > form.search {
			if ($grid.ncols[$l] == 1) {
				grid-subcontainer($grid, $l, 1, $grid.ncols[$l] - 1);
			}

			if ($grid.ncols[$l] == 3) {
				grid-subcontainer($grid, $l, 2, $grid.ncols[$l] - 2);
			}

			if ($grid.ncols[$l] >= 6) {
				grid-subcontainer($grid, $l, 3, $grid.ncols[$l] - 3);
			}
		}

		article.entry {
			grid-column($grid, $l, $grid.ncols[$l] - 1, 1);

			ul.tags {
				// TODO: exdent
			}
		}

		section.docs {
			grid-column($grid, $l, 9);

			// XXX: hacky effort at a fluid subgrid
			div {
				float: left;
				width: 33%;
				box-sizing: border-box;
				padding-left:  $grid.gutter;
				padding-right: $grid.gutter;
			}

			margin-left:  -($grid.gutter);
			margin-right: -($grid.gutter);
		}
	}

	$q = grid-breakpoint($grid, $l, max);
	@media $q {
		if ($grid.ncols[$l] <= 1) {
			table.download th:first-child,
			table.download td:first-child {
				display: none;
			}
		}

		if ($grid.ncols[$l] <= 8) {
			table.download th.md5,
			table.download td.md5 {
				display: none;
			}
		}
	}
}

pre {
	padding: 1ex 1.75em;
	margin: 1.25em 0;
	border: solid 1px #ddd;

	& div.lines {
		float: left;
		border-right: solid 1px #ddd;
		background-color: #f7f7f7;
		color: #bbb ! important;
		margin-right: 1ex;
		padding: 1ex 0;
		padding-right: 1.5ex;
		padding-left: 1ex;
		margin: -1ex 0;
		margin-left: -1.75em;
		margin-right: 1ex;
	}
}

ol.goals li {
	margin-bottom: 1em;
}

ul.otherformats {
	pipelist();
}

html.minidocbook.refentry main h1 {
	float: right;
}

