/* $Id$ */

@import "misc.styl";

$grid-colour ?= pink;

ol.overlay {
	pointer-events: none;

	top:      0;
	right:    0;
	bottom:   0;
	left:     0;

	width:   auto;
	height:  auto;
	display: none;

	opacity(30%);

	list-style-type: none;

	&#cols {
		position: fixed;

		margin-top:     0;
		margin-bottom:  0;
		padding-top:    0;
		padding-bottom: 0;

		outline-right: dotted 1px;
		outline-color: $grid-colour;

		li {
			background-color: $grid-colour;

// XXX: abstraction
			border-left:  solid $gutter $grid-colour - 50%;
			border-right: solid $gutter $grid-colour - 50%;

			&:after {
				text-align:  center;
				white-space: pre-wrap;
				color: $grid-colour - 50%;
			}

			min-height: 100%;
		}
	}

	&#rows {
		position: absolute;

		li {
			margin:  0;
			padding: 0;
			width:   auto;
			height:  $baseline;

			border-bottom: solid 1px #bbb;
			margin-bottom: -1px;
		}
	}

}

// TODO: abstraction
for $l in 0 .. length($grid.ncols) - 1 {
	$q = grid-breakpoint($grid, $l, min);
	@media $q {
		ol.overlay#cols {
			grid-container($grid, $l);
		}

		ol.overlay#cols li {
			grid-column($grid, $l);

			for $n in 1 .. $grid.ncols[length($grid.ncols) - 1] {
				&:nth-child({$n}) {
					&:after {
						content: '"#%s\A %s"' % ($n round(@width));
					}
				}
			}
		}
	}
}

