/* $Id$ */

// TODO: centralise
logbox($action, $hover = true) {
	$colors = {
		A: #0f0,
		D: #f00,
		M: #ec0, // optical correction for yellow
		R: #000
	}

	c = lighten($colors[$action], 60%);

	&:before {
		line-height: inherit;

		content: " ";
		display: inline-block;
		height: 1.5ex;
		width:  1.5ex;
		border: solid 1px transparent;
		margin-right:   0.5em;
		margin-bottom: -0.25ex; // centre within the line
	}

	&:before {
		background-color: lighten(c, 60%);
		border-color:     darken(desaturate(@background-color, 20%), 25%);
	}

	if ($hover ) {
		&:hover:before {
			background-color: lighten(desaturate(c, 20%), 20%);
			border-color:     darken(desaturate(@background-color, 20%), 25%);
		}
	}
}

.changelog {

	dl.summary.expandable {
		dt span.filler {
			display: inline;
			margin-left: 1ex;
		}

		dt a {
			text-decoration: none;
		}

		&.collapsed > dt,
		&.expanding > dt,
		&.expanded  > dt {
			margin-top: 0;
			padding: 0;

			a {
				cursor: pointer;
				padding: 0;
				display: block;
			}

			// TODO: use hang() for this
			&:before {
				margin-left: -2em;
				display: block;
				height: 0;
				text-align: right;
				width: 1.5em;
			}
		}

		// TODO: centralise with expander widget thingy
		// that should have the same arrow symbols as for dl/dt expander
		&.collapsed > dt:before { content: "\21D2"; }
		&.expanding > dt:before { content: "\21D8"; }
		&.expanded  > dt:before { content: "\21D3"; }

		&.expanding > dd {
//			height: 1.5em;
//			overflow: hidden;
		}

		&.collapsed > dd {
			height: 0em;
			overflow: hidden;
		}

		& > dt {
			ul.summary {
				margin: 0;

				li {
					display: inline-block;
					margin-left: 1em;

					&:first-child {
						margin-left: 0;
					}

					text-transform: lowercase;
					font-feature-settings: "lnum" 0;
					font-feature-settings: "onum" 1;
				}

				li.svn-M {
					logbox('M', false);
				}
				li.svn-A {
					logbox('A', false);
				}
				li.svn-D {
					logbox('D', false);
				}
				li.svn-R {
					logbox('R', false);
				}
			}
		}

		& > dd {
			margin: 0;
		}
	}

	dl.paths {
		font-size: 90%;
		margin: 0;

		dt {
			font-weight: normal;
		}

		dd {
			margin: 0;
			margin-bottom: 1ex;
		}
	}

	ul.paths {
		list-style-type: none;
		padding-left: 1.5em; // TODO: take from list gutter
		margin: 0;

		li {
			margin: 0;

			&.copy {
				display: table-row;

				a {
					display: table-cell;
				}

				a:first-child + a:before {
					content: " â†’ ";
					text-align: center;
					display: inline-block;
					width: 2em;
					margin-right: 0;
				}
			}

			& {
				line-height: inherit;
			}
		}
	}

	dl.paths a,
	ul.paths li a {
		display: block;

		&, &:before:hover {
			color: #999;
		}

		&:hover {
			color: #000;
		}
	}

	ul.paths li a {
		&.svn-M:first-child {
			logbox('M', true);
		}
		&.svn-A:first-child {
			logbox('A', true);
		}
		&.svn-D:first-child {
			logbox('D', true);
		}
		&.svn-R:first-child {
			logbox('R', true);
		}
	}

	aside.msg {
		white-space: pre-wrap;	/* XXX: placeholder until wiki parsing is done */
	}

	form.log label {
		display: block;
	}

}

