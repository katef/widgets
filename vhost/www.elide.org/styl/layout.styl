/* $Id$ */

body {
	margin:  0;
	padding: 0;
	padding-bottom: ($grid-baseline * 3);

	clearfix();
}

section.page {
	// TODO: max-width: $grid-baseline * 100;

	h2 {
		padding-top: ceil($grid-baseline * 0.0);
		font-size:       ($grid-basefont * 2.0);
		line-height:     ($grid-baseline * 1.0);
	}

	& > dl.index {
		dt a {
			display: block;

// XXX: align to grid
			width: 25%;
			float: left;
			clear: left;

			padding: 0.5ex  2ex;
			margin: -0.5ex -2ex;
		}
	}

}

header {
	margin-top:    ($grid-baseline * 5.0);
	margin-bottom: ($grid-baseline * 2.0);

	/* respond when the page height is below 30 lines */
	$q = "all and (max-height: " + ($grid-baseline * 30) + ")";
	@media $q {
		margin-top: ($grid-baseline * 2.0);
	}

	h1 {
		padding-top:    ceil($grid-baseline * 0.5);
		font-size:          ($grid-basefont * 2.7);
		line-height:        ($grid-baseline * 2.0);
		padding-bottom: ceil($grid-baseline * 0.5);
	}
}

footer {
	margin-top:    ($grid-baseline * 2);
	margin-bottom: ($grid-baseline * 2);
	display: none; /* XXX */
}

section.page section.archive-year[data-count = "0"] {
	display: none;
}

section.page section.archive-year > ol {
	list-style-type: none;
}

section.page section.archive-year {
	& > h1 {
		&:after {
			content: " ";
		}

		a {
			display: none;
		}
	}
}

section.page article.entry {
	time.update,
	a[name],
	ul.tags {
		display: block;
		position: relative;
		text-align: left;
	}
}

nav#monthindex {
	display: block;
	margin-top:    ($grid-baseline * 1);
	margin-bottom: ($grid-baseline * 1);

	font-size: .9em;

	ol.pages {
		float: left;
	}

	& > a {
		float: right;
	}
}

article.entry {
	ul.tags {
		margin-top: ($grid-baseline * 1);

		li {
			font-size: ($grid-basefont - 1px);
		}
	}
}

nav#sidebar {
	display: none;

	table.calendar {
		table-layout: fixed;

		max-width:   (12 * $grid-baseline);
		margin-left: (6  * $grid-baseline);
		width: 100%;

		/* TODO: mixin? */
		border-spacing: 0 ! important;
		border-collapse: collapse ! important;
	}

	ol.years {
		display: none;
		float: left;
		margin-left:   $gutter;
		margin-bottom: $gutter;
	}
}

nav.pages {
	padding-top:    ($grid-baseline * 1);
	padding-bottom: ($grid-baseline * 4);
}

pre {
	overflow-y: auto;
	margin-left: 0;
}

for $l in 0 .. length($ncols) - 1 {
	$q = grid-breakpoint($grid, $l);
	@media $q {
		header,
		section.page,
		footer {
			grid-container($grid, $l);
		}

		if ($ncols[$l] == 1) {
			header h1,
			header ul {
				grid-column($grid, $l, $ncols[$l]);
			}

			section.page > * {
				grid-column($grid, $l, $ncols[$l]);
			}
		}

		if ($ncols[$l] >= 4) {
			header h1,
			header ul {
				grid-column($grid, $l, $ncols[$l] - 1, 1);
			}

			section.page > * {
				grid-column($grid, $l, $ncols[$l] - 1, 1);
			}

			section.page > article.entry {
				& > time.update,
				& > a[name],
				& > ul.tags {
// XXX: this is wrong; need to define a sub-grid, so the percentage of $ncols[$l] - 1 is correct
					grid-column($grid, $l, 1, -1);
				}
			}

			nav#monthindex {
				/* TODO: could animate collapsing by transitioning on width to 0 */

				/* respond when the #monthindex is too narrow to fit all 12 months explicitly */
				// TODO: pages-collapse(data-fmt);

				/* respond when the #monthindex is too narrow to fit the attr() months */
				// TODO: pages-collapse(false);
			}
		}

		if ($ncols[$l] >= 5) {
			header h1,
			header ul {
				grid-column($grid, $l, 4, 1);
			}
		}
	}
}

